#pragma warning disable AA0005, AA0008, AA0018, AA0021, AA0072, AA0137, AA0201, AA0206, AA0218, AA0228, AL0254, AL0424, AW0006 // ForNAV settings
Table 57037 "Bank Payments Batching"
{
    DrillDownPageID = "Batch Payment List";
    LookupPageID = "Batch Payment List";

    fields
    {
        field(1;"Batch No";Code[10])
        {
            DataClassification = ToBeClassified;
            Editable = false;
        }
        field(2;"Description/Remarks";Text[250])
        {
            DataClassification = ToBeClassified;
        }
        field(3;Status;Option)
        {
            DataClassification = ToBeClassified;
            OptionCaption = 'Open,Pending Approval,Approved';
            OptionMembers = Open,"Pending Approval",Approved;
        }
        field(4;"Prepared By";Code[50])
        {
            DataClassification = ToBeClassified;
        }
        field(5;"Date Created";Date)
        {
            DataClassification = ToBeClassified;
        }
        field(6;"Payment Processed";Boolean)
        {
            DataClassification = ToBeClassified;
        }
        field(7;"File Generated By";Code[50])
        {
            DataClassification = ToBeClassified;
        }
        field(8;"Date Processed";Date)
        {
            DataClassification = ToBeClassified;
        }
        field(9;"Total PV Lines";Integer)
        {
            CalcFormula = count("Bank Payments Batching Lines" where ("Batch No"=field("Batch No"),
                                                                      "Document No."=filter(<>''),
                                                                      "Total Amount"=filter(<>0)));
            Editable = false;
            FieldClass = FlowField;
        }
        field(10;"Total Approved Amount";Decimal)
        {
            CalcFormula = sum("KCB Payment Lines"."Amount Decimal" where ("Batch No"=field("Batch No"),
                                                                          Approved=const(true)));
            Editable = false;
            FieldClass = FlowField;
        }
        field(11;"Total Approved Lines";Integer)
        {
            CalcFormula = count("KCB Payment Lines" where ("Batch No"=field("Batch No"),
                                                           Approved=filter(true)));
            Editable = false;
            FieldClass = FlowField;
        }
        field(12;"Payment File Generated";Boolean)
        {
            DataClassification = ToBeClassified;
        }
        field(13;"File Sent to Bank";Boolean)
        {
            DataClassification = ToBeClassified;
        }
        field(14;"Date Sent to Bank";Date)
        {
            DataClassification = ToBeClassified;
        }
        field(15;"Region Code";Code[20])
        {
            DataClassification = ToBeClassified;
        }
        field(16;"Approval  Status";Option)
        {
            DataClassification = ToBeClassified;
            OptionCaption = ' ,Open,Pending Approval,Approved,Rejected';
            OptionMembers = " ",Open,"Pending Approval",Approved,Rejected;
        }
        field(17;Response;Text[30])
        {
            DataClassification = ToBeClassified;
        }
        field(18;"Response Ref No";Text[30])
        {
            DataClassification = ToBeClassified;
        }
        field(19;"Failure Reason";Text[250])
        {
            DataClassification = ToBeClassified;
        }
        field(20;Rank;Integer)
        {
            DataClassification = ToBeClassified;
        }
        field(21;"Enter OTP";Code[20])
        {
            DataClassification = ToBeClassified;
            ExtendedDatatype = Masked;

            trigger OnValidate()
            begin
                if "Enter OTP"<> "OTP Verification" then
                  Error('Invalid OTP');
            end;
        }
        field(22;"OTP SMS";Code[20])
        {
            DataClassification = ToBeClassified;
            ExtendedDatatype = Masked;

            trigger OnValidate()
            begin
                if "OTP SMS"<> "OTP SMS Verification" then
                  Error('Invalid OTP');
            end;
        }
        field(23;"OTP Verification";Code[20])
        {
            DataClassification = ToBeClassified;
            Editable = false;
            ExtendedDatatype = Masked;
        }
        field(24;"OTP SMS Verification";Code[20])
        {
            DataClassification = ToBeClassified;
            Editable = false;
            ExtendedDatatype = Masked;
        }
        field(25;"SMS Status";Option)
        {
            DataClassification = ToBeClassified;
            Editable = false;
            OptionCaption = 'Pending,Sent';
            OptionMembers = Pending,Sent;
        }
    }

    keys
    {
        key(Key1;"Batch No")
        {
            Clustered = true;
        }
    }

    fieldgroups
    {
    }

    trigger OnDelete()
    begin
        Error('You do not have permission to delete this document!');
    end;

    trigger OnInsert()
    begin
        if "Batch No"= '' then
        begin
            BankPaymentsBatching.Reset;
            if BankPaymentsBatching.FindLast then
            begin
                "Batch No":=IncStr(BankPaymentsBatching."Batch No")
            end else
            begin
                "Batch No":='BAT-00001';
            end;
        end;
        "Prepared By":=UserId;
        "Date Created":=Today;
        "Approval  Status":="approval  status"::Open;
        Status:=Status::Open;

        UserSetup.Reset;
        UserSetup.SetRange("User ID",UserId);
        if UserSetup.Find('-') then begin
          "Region Code":=UserSetup."Responsibility Center";
        end;
    end;

    var
        BankPaymentsBatching: Record "Bank Payments Batching";
        KCBPaymentLines: Record "KCB Payment Lines";
        UserSetup: Record "User Setup";
        Payments: Record payments;
        BankPaymentsBatchingLines: Record "Bank Payments Batching Lines";
}

